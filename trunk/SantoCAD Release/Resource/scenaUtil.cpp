// |              Generated by SantoCAD                |
// |  Donatello Santoro (donatello.santoro@gmail.com)  |
// |  Michele Santomauro (michelesantomauro@gmail.com) |
// |                                                   |
// |  http://code.google.com/p/santocad/               |

#include "scenaUtil.h"

void controllaLimiti(vector3f *pos){
	GLfloat SCENE_SIZE = 20.0f;
	GLfloat boundary = (SCENE_SIZE - 1.5);

	(*pos)[0] = max((*pos)[0],-(boundary - 0.1));
	(*pos)[1] = max((*pos)[1],-(boundary - 0.1));
	(*pos)[2] = max((*pos)[2],-(boundary - 0.1));
	(*pos)[0] = min((*pos)[0],(boundary - 0.1));
	(*pos)[1] = min((*pos)[1],(boundary - 0.1));
	(*pos)[2] = min((*pos)[2],(boundary - 0.1));
}

void disegnaSkybox(GLint idTextureSkymap, int posizioneY){
	glBindTexture(GL_TEXTURE_CUBE_MAP, idTextureSkymap);

	glEnable(GL_TEXTURE_CUBE_MAP);
	glDisable(GL_TEXTURE_GEN_S);
	glDisable(GL_TEXTURE_GEN_T);
	glDisable(GL_TEXTURE_GEN_R);

	GLfloat side = 20.0f;
	setMaterialeDefault();
	glColor3f(1.0,1.0,1.0);
	glPushMatrix();
	glTranslatef(0.0,-posizioneY,0.0);
	glBegin(GL_QUADS);

		// Negative X
		glTexCoord3f(-1.0f, -1.0f, 1.0f);
		glVertex3f(-side, -side, side);

		glTexCoord3f(-1.0f, -1.0f, -1.0f);
		glVertex3f(-side, -side, -side);

		glTexCoord3f(-1.0f, 1.0f, -1.0f);
		glVertex3f(-side, side, -side);

		glTexCoord3f(-1.0f, 1.0f, 1.0f);
		glVertex3f(-side, side, side);

		//  Postive X
		glTexCoord3f(1.0f, -1.0f, -1.0f);
		glVertex3f(side, -side, -side);

		glTexCoord3f(1.0f, -1.0f, 1.0f);
		glVertex3f(side, -side, side);

		glTexCoord3f(1.0f, 1.0f, 1.0f);
		glVertex3f(side, side, side);

		glTexCoord3f(1.0f, 1.0f, -1.0f);
		glVertex3f(side, side, -side);

		// Negative Z 
		glTexCoord3f(-1.0f, -1.0f, -1.0f);
		glVertex3f(-side, -side, -side);

		glTexCoord3f(1.0f, -1.0f, -1.0f);
		glVertex3f(side, -side, -side);

		glTexCoord3f(1.0f, 1.0f, -1.0f);
		glVertex3f(side, side, -side);

		glTexCoord3f(-1.0f, 1.0f, -1.0f);
		glVertex3f(-side, side, -side);

		// Positive Z 
		glTexCoord3f(1.0f, -1.0f, 1.0f);
		glVertex3f(side, -side, side);

		glTexCoord3f(-1.0f, -1.0f, 1.0f);
		glVertex3f(-side, -side, side);

		glTexCoord3f(-1.0f, 1.0f, 1.0f);
		glVertex3f(-side, side, side);

		glTexCoord3f(1.0f, 1.0f, 1.0f);
		glVertex3f(side, side, side);

		// Positive Y
		glTexCoord3f(-1.0f, 1.0f, 1.0f);
		glVertex3f(-side, side, side);

		glTexCoord3f(-1.0f, 1.0f, -1.0f);
		glVertex3f(-side, side, -side);

		glTexCoord3f(1.0f, 1.0f, -1.0f);
		glVertex3f(side, side, -side);

		glTexCoord3f(1.0f, 1.0f, 1.0f);
		glVertex3f(side, side, side);

		// Negative Y
		glTexCoord3f(-1.0f, -1.0f, -1.0f);
		glVertex3f(-side, -side, -side);

		glTexCoord3f(-1.0f, -1.0f, 1.0f);
		glVertex3f(-side, -side, side);

		glTexCoord3f(1.0f, -1.0f, 1.0f);
		glVertex3f(side, -side, side);

		glTexCoord3f(1.0f, -1.0f, -1.0f);
		glVertex3f(side, -side, -side);
	glEnd();
	glPopMatrix();

	glEnable(GL_TEXTURE_GEN_S);
	glEnable(GL_TEXTURE_GEN_T);
	glEnable(GL_TEXTURE_GEN_R);
	glDisable(GL_TEXTURE_CUBE_MAP);
}


void disegnaPavimento(int tassellazione, bool wireframe){
	glPushMatrix();
		glTranslatef(0.0,-0.5,0.0);
		glRotatef(-90.0,1.0,0.0,0.0);
		glScalef(20,20,1);

		GLfloat i = 0;
		GLfloat j = 0;
		GLfloat step = (GLfloat)2/tassellazione;

		for(i=-1; i<1; i+=step){
			for(j=1; j>-1; j-=step){
				if(wireframe){
					glBegin(GL_LINE_LOOP);
				}else{
					glBegin(GL_QUADS);
					//Senso antiorario
				}
				
				glNormal3f(0.0, 0.0, 1.0);
				glVertex3f(i		,j - step, 0);
				glVertex3f(i + step	,j - step, 0);
				glVertex3f(i + step	, j, 0);
				glVertex3f(i		, j, 0);

				glEnd();
			}
		}
	glPopMatrix();
}